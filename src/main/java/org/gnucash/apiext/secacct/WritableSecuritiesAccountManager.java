package org.gnucash.apiext.secacct;

import java.time.LocalDateTime;

import org.gnucash.api.read.GnuCashAccount;
import org.gnucash.api.read.GnuCashCommodity;
import org.gnucash.api.write.GnuCashWritableAccount;
import org.gnucash.api.write.GnuCashWritableFile;
import org.gnucash.base.basetypes.complex.GCshCmdtyCurrID;
import org.gnucash.base.basetypes.complex.GCshCmdtyID;
import org.gnucash.base.basetypes.simple.GCshAcctID;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class WritableSecuritiesAccountManager extends SecuritiesAccountManager 
{
    // Logger
    private static final Logger LOGGER = LoggerFactory.getLogger(WritableSecuritiesAccountManager.class);
    
    // ---------------------------------------------------------------
    
    private static final String SEP = "_"; // ::MAGIC
    
    // ----------------------------
    
    private GnuCashWritableAccount wrtblInvstAcct = null;
    
    // ---------------------------------------------------------------
    
    public WritableSecuritiesAccountManager() {
    	super();
    }
    
    public WritableSecuritiesAccountManager(GnuCashWritableFile gcshFile, GCshAcctID acctID) {
    	super(gcshFile, acctID);
    	
    	if ( acctID == null ) {
    		throw new IllegalArgumentException("null account ID given");
    	}
    	
    	if ( ! acctID.isSet() ) {
    		throw new IllegalArgumentException("unset account ID given");
    	}
    	
    	wrtblInvstAcct = gcshFile.getWritableAccountByID(acctID);
    	if ( wrtblInvstAcct.getType() != GnuCashAccount.Type.ASSET ) {
    		wrtblInvstAcct = null;
    		throw new IllegalArgumentException("account is not of type '" + GnuCashAccount.Type.ASSET + "'");
    	}
    }
    
    public WritableSecuritiesAccountManager(GnuCashWritableAccount acct) {
    	super(acct);
    	setWritableInvstAcct(acct);
    }
    
    // ---------------------------------------------------------------
    
    public GnuCashWritableAccount getWritableInvstAcct() {
		return wrtblInvstAcct;
	}

	public void setWritableInvstAcct(GnuCashWritableAccount acct) {
		setInvstAcct(acct);
		
    	if ( acct == null ) {
    		throw new IllegalArgumentException("null account given");
    	}
    	
    	if ( acct.getType() != GnuCashAccount.Type.ASSET ) {
    		throw new IllegalArgumentException("account is not of type '" + GnuCashAccount.Type.ASSET + "'");
    	}

		this.wrtblInvstAcct = acct;
	}

    // ---------------------------------------------------------------

	public GnuCashWritableAccount genShareAcct(GnuCashCommodity cmdty)
	{
		if ( cmdty == null )
			throw new IllegalStateException("null commodity ID given");
		
		if ( cmdty.getQualifID().getType() != GCshCmdtyCurrID.Type.SECURITY_EXCHANGE &&
			 cmdty.getQualifID().getType() != GCshCmdtyCurrID.Type.SECURITY_MIC &&
			 cmdty.getQualifID().getType() != GCshCmdtyCurrID.Type.SECURITY_SECIDTYPE &&
			 cmdty.getQualifID().getType() != GCshCmdtyCurrID.Type.SECURITY_GENERAL )
		{
			throw new IllegalStateException("given commodity's ID has wrong type: " + cmdty.getQualifID().getType());
		}
		
		GnuCashWritableAccount acct = wrtblInvstAcct.getWritableGnuCashFile().createWritableAccount();
		acct.setType(GnuCashAccount.Type.STOCK);
		acct.setParentAccount(getInvstAcct());
		acct.setCmdtyCurrID(cmdty.getQualifID());
		acct.setName(cmdty.getXCode() + SEP + cmdty.getName());
		acct.setDescription("Generated by WritableSecuritiesAccountManager, " + LocalDateTime.now());
		
		return acct;
	}
	
	public GnuCashWritableAccount genShareAcct(GCshCmdtyID cmdtyID)
	{
		if ( cmdtyID == null )
			throw new IllegalStateException("null commodity ID given");
		
		if ( ! cmdtyID.isSet() )
			throw new IllegalStateException("unset commodity ID given");

		if ( cmdtyID.getType() != GCshCmdtyCurrID.Type.SECURITY_EXCHANGE &&
			 cmdtyID.getType() != GCshCmdtyCurrID.Type.SECURITY_MIC &&
			 cmdtyID.getType() != GCshCmdtyCurrID.Type.SECURITY_SECIDTYPE &&
			 cmdtyID.getType() != GCshCmdtyCurrID.Type.SECURITY_GENERAL )
		{
			throw new IllegalStateException("given commodity ID has wrong type: " + cmdtyID.getType());
		}
		
		GnuCashCommodity cmdty = wrtblInvstAcct.getWritableGnuCashFile().getCommodityByQualifID(cmdtyID);

		return genShareAcct(cmdty);
	}
    
}
